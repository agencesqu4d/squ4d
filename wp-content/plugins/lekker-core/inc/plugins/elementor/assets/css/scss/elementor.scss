@import '../../../../../../../../themes/lekker/assets/css/scss/variables';
@import '../../../../../../../../themes/lekker/assets/css/scss/_grid-variables';
@import '../../../../../../../../themes/lekker/assets/css/scss/mixins';

section.qodef-elementor-content-grid > .elementor-container {
    width: $content-grid-width-1100;
    margin: 0 auto;
    
    .qodef--boxed & {
        width: $content-grid-width-1100 + 2 * $boxed-grid-padding-size;
    }
    
    @each $key, $values in $content-grid-width-map {
        
        @media only screen and (min-width: map-deep-get($content-grid-width-map, $key, 'responsive-break')) {
            
            .qodef-content-grid-#{$key} & {
                width: map-deep-get($content-grid-width-map, $key, 'content-grid-width');
                
                @at-root .qodef--boxed#{&} {
                    width: map-deep-get($content-grid-width-map, $key, 'content-grid-width') + 2 * $boxed-grid-padding-size;
                }
            }
        }
    }
}

section.qodef-elementor-content-grid > .elementor-container {
    
    @each $key, $values in $content-grid-width-responsive-map {
        
        @media only screen and (max-width: map-deep-get($content-grid-width-responsive-map, $key, 'responsive-break')) {
            width: map-deep-get($content-grid-width-responsive-map, $key, 'content-grid-width');
        }
    }
}
.elementor-element {

    &.qodef-sticky-column {
        align-self: flex-start;
    }

    &.elementor-widget-text-editor {
        @include qodefTypographyLayout;
    }
}